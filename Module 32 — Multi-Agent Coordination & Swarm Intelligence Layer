# Module 32 â€” Multi-Agent Coordination & Swarm Intelligence Layer

import random

class SwarmAgent:
    def __init__(self, agent_id, position=(0,0)):
        self.agent_id = agent_id
        self.position = position
    
    def decide_move(self, neighbors, goals):
        # Basic swarm intelligence: move towards goal, avoid collisions
        move_x = sum([n.position[0] for n in neighbors])/len(neighbors)
        move_y = sum([n.position[1] for n in neighbors])/len(neighbors)
        target_x, target_y = goals[self.agent_id]
        new_x = (move_x + target_x)/2
        new_y = (move_y + target_y)/2
        return (new_x, new_y)
    
    def update_position(self, new_pos):
        self.position = new_pos

# Example swarm simulation
agents = [SwarmAgent(i, (random.randint(0,10), random.randint(0,10))) for i in range(5)]
goals = {i:(random.randint(20,30), random.randint(20,30)) for i in range(5)}

for step in range(10):
    for agent in agents:
        neighbors = [a for a in agents if a.agent_id != agent.agent_id]
        new_pos = agent.decide_move(neighbors, goals)
        agent.update_position(new_pos)
        print(f"Agent {agent.agent_id} moved to {agent.position}")
```
