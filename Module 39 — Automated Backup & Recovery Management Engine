# Module 39 â€” Automated Backup & Recovery Management Engine

import os
import shutil
from datetime import datetime

class BackupManager:
    def __init__(self, backup_dir="backups"):
        self.backup_dir = backup_dir
        os.makedirs(backup_dir, exist_ok=True)
    
    def backup_file(self, file_path):
        if os.path.exists(file_path):
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = os.path.basename(file_path)
            dest = os.path.join(self.backup_dir, f"{timestamp}_{filename}")
            shutil.copy2(file_path, dest)
            return dest
        return None
    
    def restore_file(self, backup_file, target_path):
        if os.path.exists(backup_file):
            shutil.copy2(backup_file, target_path)
            return True
        return False

# Example usage:
# manager = BackupManager()
# backup_path = manager.backup_file("module_config.json")
# print(f"Backup created at: {backup_path}")
# restored = manager.restore_file(backup_path, "module_config_restored.json")
# print(f"Restoration successful: {restored}")
```
