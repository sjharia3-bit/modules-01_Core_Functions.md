# Module 48 â€” Real-Time Collaboration & Multi-User Interaction Engine

import threading
from queue import Queue

class CollaborationEngine:
    def __init__(self):
        self.sessions = {}
        self.message_queues = {}

    def start_session(self, user_id):
        self.sessions[user_id] = True
        self.message_queues[user_id] = Queue()

    def send_message(self, from_user, to_user, message):
        if to_user in self.sessions:
            self.message_queues[to_user].put(f"{from_user}: {message}")

    def receive_messages(self, user_id):
        messages = []
        while not self.message_queues[user_id].empty():
            messages.append(self.message_queues[user_id].get())
        return messages

# Example usage:
# engine = CollaborationEngine()
# engine.start_session("user1")
# engine.start_session("user2")
# engine.send_message("user1", "user2", "Hello!")
# print(engine.receive_messages("user2"))
```
