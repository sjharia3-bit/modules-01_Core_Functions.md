# Module 53 â€” Dynamic Scenario Simulation & Forecasting Engine

import pandas as pd
import numpy as np

class SimulationEngine:
    def __init__(self):
        self.scenarios = []

    def run_simulation(self, input_data, steps=10):
        results = []
        current_state = input_data.copy()
        for step in range(steps):
            next_state = current_state * (1 + np.random.normal(0, 0.05, size=current_state.shape))
            results.append(next_state)
            current_state = next_state
        self.scenarios.append(results)
        return results

    def forecast(self, input_data, model=None):
        # Simple example: linear projection
        return input_data * 1.1

# Example usage:
# engine = SimulationEngine()
# data = np.array([100, 200, 150])
# sim_results = engine.run_simulation(data)
# forecast = engine.forecast(data)
# print(sim_results, forecast)
```
